
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: controllertests.webapp.com.bolingcavalry
spec:
  group: webapp.com.bolingcavalry
  names:
    kind: ControllerTest
    listKind: ControllerTestList
    plural: controllertests
    singular: controllertest
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: ControllerTest is the Schema for the controllertests API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ControllerTestSpec defines the desired state of ControllerTest
          properties:
            foo:
              description: Foo is an example field of ControllerTest. Edit ControllerTest_types.go
                to remove/update
              type: string
            items:
              description: 快速部署 会默认设置一些参数
              items:
                properties:
                  image:
                    type: string
                  name:
                    type: string
                  ports:
                    items:
                      properties:
                        port:
                          format: int32
                          type: integer
                        targetPort:
                          format: int32
                          type: integer
                      required:
                      - port
                      - targetPort
                      type: object
                    type: array
                  replicas:
                    format: int32
                    type: integer
                  selector:
                    description: A label selector is a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. An
                      empty label selector matches all objects. A null label selector
                      matches no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector
                          requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector
                            that contains values, a key, and an operator that relates
                            the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector
                                applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship
                                to a set of values. Valid operators are In, NotIn,
                                Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If
                                the operator is In or NotIn, the values array must
                                be non-empty. If the operator is Exists or DoesNotExist,
                                the values array must be empty. This array is replaced
                                during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A
                          single {key,value} in the matchLabels map is equivalent
                          to an element of matchExpressions, whose key field is "key",
                          the operator is "In", and the values array contains only
                          "value". The requirements are ANDed.
                        type: object
                    type: object
                required:
                - image
                - name
                - ports
                - replicas
                - selector
                type: object
              type: array
            rules:
              items:
                description: IngressRule represents the rules mapping the paths under
                  a specified host to the related backend services. Incoming requests
                  are first evaluated for a host match, then routed to the backend
                  associated with the matching IngressRuleValue.
                properties:
                  host:
                    description: "Host is the fully qualified domain name of a network
                      host, as defined by RFC 3986. Note the following deviations
                      from the \"host\" part of the URI as defined in the RFC: 1.
                      IPs are not allowed. Currently an IngressRuleValue can only
                      apply to the \t  IP in the Spec of the parent Ingress. 2. The
                      `:` delimiter is not respected because ports are not allowed.
                      \t  Currently the port of an Ingress is implicitly :80 for http
                      and \t  :443 for https. Both these may change in the future.
                      Incoming requests are matched against the host before the IngressRuleValue.
                      If the host is unspecified, the Ingress routes all traffic based
                      on the specified IngressRuleValue."
                    type: string
                  http:
                    description: 'HTTPIngressRuleValue is a list of http selectors
                      pointing to backends. In the example: http://<host>/<path>?<searchpart>
                      -> backend where where parts of the url correspond to RFC 3986,
                      this resource will be used to match against everything after
                      the last ''/'' and before the first ''?'' or ''#''.'
                    properties:
                      paths:
                        description: A collection of paths that map requests to backends.
                        items:
                          description: HTTPIngressPath associates a path regex with
                            a backend. Incoming urls matching the path are forwarded
                            to the backend.
                          properties:
                            backend:
                              description: Backend defines the referenced service
                                endpoint to which the traffic will be forwarded to.
                              properties:
                                serviceName:
                                  description: Specifies the name of the referenced
                                    service.
                                  type: string
                                servicePort:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Specifies the port of the referenced
                                    service.
                                  x-kubernetes-int-or-string: true
                              required:
                              - serviceName
                              - servicePort
                              type: object
                            path:
                              description: Path is an extended POSIX regex as defined
                                by IEEE Std 1003.1, (i.e this follows the egrep/unix
                                syntax, not the perl syntax) matched against the path
                                of an incoming request. Currently it can contain characters
                                disallowed from the conventional "path" part of a
                                URL as defined by RFC 3986. Paths must begin with
                                a '/'. If unspecified, the path defaults to a catch
                                all sending traffic to the backend.
                              type: string
                          required:
                          - backend
                          type: object
                        type: array
                    required:
                    - paths
                    type: object
                type: object
              type: array
            selector:
              description: 标签选择 属于该资源下的deploy，svc，ing会打上该标签
              properties:
                matchExpressions:
                  description: matchExpressions is a list of label selector requirements.
                    The requirements are ANDed.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                matchLabels:
                  additionalProperties:
                    type: string
                  description: matchLabels is a map of {key,value} pairs. A single
                    {key,value} in the matchLabels map is equivalent to an element
                    of matchExpressions, whose key field is "key", the operator is
                    "In", and the values array contains only "value". The requirements
                    are ANDed.
                  type: object
              type: object
          required:
          - items
          - rules
          - selector
          type: object
        status:
          description: ControllerTestStatus defines the observed state of ControllerTest
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
